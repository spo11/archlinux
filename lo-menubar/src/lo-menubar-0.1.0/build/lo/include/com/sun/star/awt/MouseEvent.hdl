#ifndef INCLUDED_COM_SUN_STAR_AWT_MOUSEEVENT_HDL
#define INCLUDED_COM_SUN_STAR_AWT_MOUSEEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/awt/InputEvent.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace awt {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct MouseEvent: public ::com::sun::star::awt::InputEvent {
    inline MouseEvent() SAL_THROW(());

    inline MouseEvent(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& Source_, const ::sal_Int16& Modifiers_, const ::sal_Int16& Buttons_, const ::sal_Int32& X_, const ::sal_Int32& Y_, const ::sal_Int32& ClickCount_, const ::sal_Bool& PopupTrigger_) SAL_THROW(());

    ::sal_Int16 Buttons CPPU_GCC3_ALIGN(::com::sun::star::awt::InputEvent);
    ::sal_Int32 X;
    ::sal_Int32 Y;
    ::sal_Int32 ClickCount;
    ::sal_Bool PopupTrigger;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::awt::MouseEvent* );

#endif // INCLUDED_COM_SUN_STAR_AWT_MOUSEEVENT_HDL
