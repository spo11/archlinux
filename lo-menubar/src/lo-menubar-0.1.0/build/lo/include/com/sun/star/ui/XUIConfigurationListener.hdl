#ifndef INCLUDED_COM_SUN_STAR_UI_XUICONFIGURATIONLISTENER_HDL
#define INCLUDED_COM_SUN_STAR_UI_XUICONFIGURATIONLISTENER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/lang/XEventListener.hdl"
#include "com/sun/star/ui/ConfigurationEvent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace ui {

class SAL_NO_VTABLE XUIConfigurationListener : public ::com::sun::star::lang::XEventListener
{
public:

    // Methods
    virtual void SAL_CALL elementInserted( const ::com::sun::star::ui::ConfigurationEvent& Event ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL elementRemoved( const ::com::sun::star::ui::ConfigurationEvent& Event ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL elementReplaced( const ::com::sun::star::ui::ConfigurationEvent& Event ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::ui::XUIConfigurationListener >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UI_XUICONFIGURATIONLISTENER_HDL
