#ifndef INCLUDED_COM_SUN_STAR_TEXT_XTEXT_HDL
#define INCLUDED_COM_SUN_STAR_TEXT_XTEXT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace text { class XTextContent; } } } }
namespace com { namespace sun { namespace star { namespace text { class XTextRange; } } } }
#include "com/sun/star/text/XSimpleText.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/container/NoSuchElementException.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace text {

class SAL_NO_VTABLE XText : public ::com::sun::star::text::XSimpleText
{
public:

    // Methods
    virtual void SAL_CALL insertTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent, ::sal_Bool bAbsorb ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XText >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_TEXT_XTEXT_HDL
