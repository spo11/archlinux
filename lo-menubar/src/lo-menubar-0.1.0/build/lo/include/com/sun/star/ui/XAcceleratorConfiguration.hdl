#ifndef INCLUDED_COM_SUN_STAR_UI_XACCELERATORCONFIGURATION_HDL
#define INCLUDED_COM_SUN_STAR_UI_XACCELERATORCONFIGURATION_HDL

#include "sal/config.h"

#include "com/sun/star/awt/KeyEvent.hdl"
#include "com/sun/star/ui/XUIConfiguration.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/container/NoSuchElementException.hdl"
#include "com/sun/star/lang/IllegalArgumentException.hdl"
#include "com/sun/star/ui/XUIConfigurationPersistence.hdl"
#include "com/sun/star/ui/XUIConfigurationStorage.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace ui {

class SAL_NO_VTABLE XAcceleratorConfiguration : public ::com::sun::star::ui::XUIConfigurationPersistence, public ::com::sun::star::ui::XUIConfigurationStorage, public ::com::sun::star::ui::XUIConfiguration
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::awt::KeyEvent > SAL_CALL getAllKeyEvents(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::rtl::OUString SAL_CALL getCommandByKeyEvent( const ::com::sun::star::awt::KeyEvent& aKeyEvent ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL setKeyEvent( const ::com::sun::star::awt::KeyEvent& aKeyEvent, const ::rtl::OUString& sCommand ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeKeyEvent( const ::com::sun::star::awt::KeyEvent& aKeyEvent ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::awt::KeyEvent > SAL_CALL getKeyEventsByCommand( const ::rtl::OUString& sCommand ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL getPreferredKeyEventsForCommandList( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& lCommandList ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException) = 0;
    virtual void SAL_CALL removeCommandFromAllKeyEvents( const ::rtl::OUString& sCommand ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::ui::XAcceleratorConfiguration >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UI_XACCELERATORCONFIGURATION_HDL
