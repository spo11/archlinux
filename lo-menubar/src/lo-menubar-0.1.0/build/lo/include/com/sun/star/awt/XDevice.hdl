#ifndef INCLUDED_COM_SUN_STAR_AWT_XDEVICE_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XDEVICE_HDL

#include "sal/config.h"

#include "com/sun/star/awt/FontDescriptor.hdl"
#include "com/sun/star/awt/DeviceInfo.hdl"
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
namespace com { namespace sun { namespace star { namespace awt { class XGraphics; } } } }
namespace com { namespace sun { namespace star { namespace awt { class XFont; } } } }
namespace com { namespace sun { namespace star { namespace awt { class XBitmap; } } } }
namespace com { namespace sun { namespace star { namespace awt { class XDisplayBitmap; } } } }
namespace com { namespace sun { namespace star { namespace awt { class XDevice; } } } }
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE XDevice : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::awt::XGraphics > SAL_CALL createGraphics(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::awt::XDevice > SAL_CALL createDevice( ::sal_Int32 nWidth, ::sal_Int32 nHeight ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::awt::DeviceInfo SAL_CALL getInfo(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::awt::FontDescriptor > SAL_CALL getFontDescriptors(  ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::awt::XFont > SAL_CALL getFont( const ::com::sun::star::awt::FontDescriptor& aDescriptor ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::awt::XBitmap > SAL_CALL createBitmap( ::sal_Int32 nX, ::sal_Int32 nY, ::sal_Int32 nWidth, ::sal_Int32 nHeight ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::awt::XDisplayBitmap > SAL_CALL createDisplayBitmap( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XBitmap >& Bitmap ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XDevice >* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_AWT_XDEVICE_HDL
