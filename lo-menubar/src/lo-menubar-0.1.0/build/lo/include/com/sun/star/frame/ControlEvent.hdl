#ifndef INCLUDED_COM_SUN_STAR_FRAME_CONTROLEVENT_HDL
#define INCLUDED_COM_SUN_STAR_FRAME_CONTROLEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/util/URL.hdl"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace frame {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct ControlEvent {
    inline ControlEvent() SAL_THROW(());

    inline ControlEvent(const ::com::sun::star::util::URL& aURL_, const ::rtl::OUString& Event_, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue >& aInformation_) SAL_THROW(());

    ::com::sun::star::util::URL aURL;
    ::rtl::OUString Event;
    ::com::sun::star::uno::Sequence< ::com::sun::star::beans::NamedValue > aInformation;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::frame::ControlEvent* );

#endif // INCLUDED_COM_SUN_STAR_FRAME_CONTROLEVENT_HDL
