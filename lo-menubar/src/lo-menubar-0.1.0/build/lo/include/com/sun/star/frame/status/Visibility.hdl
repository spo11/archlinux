#ifndef INCLUDED_COM_SUN_STAR_FRAME_STATUS_VISIBILITY_HDL
#define INCLUDED_COM_SUN_STAR_FRAME_STATUS_VISIBILITY_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace frame { namespace status {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct Visibility {
    inline Visibility() SAL_THROW(());

    inline Visibility(const ::sal_Bool& bVisible_) SAL_THROW(());

    ::sal_Bool bVisible;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::frame::status::Visibility* );

#endif // INCLUDED_COM_SUN_STAR_FRAME_STATUS_VISIBILITY_HDL
