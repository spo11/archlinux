#ifndef INCLUDED_COM_SUN_STAR_AWT_SIMPLEFONTMETRIC_HDL
#define INCLUDED_COM_SUN_STAR_AWT_SIMPLEFONTMETRIC_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace awt {

#ifdef SAL_W32
#   pragma pack(push, 8)
#elif defined(SAL_OS2)
#   pragma pack(8)
#endif

struct SimpleFontMetric {
    inline SimpleFontMetric() SAL_THROW(());

    inline SimpleFontMetric(const ::sal_Int16& Ascent_, const ::sal_Int16& Descent_, const ::sal_Int16& Leading_, const ::sal_Int16& Slant_, const ::sal_Unicode& FirstChar_, const ::sal_Unicode& LastChar_) SAL_THROW(());

    ::sal_Int16 Ascent;
    ::sal_Int16 Descent;
    ::sal_Int16 Leading;
    ::sal_Int16 Slant;
    ::sal_Unicode FirstChar;
    ::sal_Unicode LastChar;
};

#ifdef SAL_W32
#   pragma pack(pop)
#elif defined(SAL_OS2)
#   pragma pack()
#endif

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::awt::SimpleFontMetric* );

#endif // INCLUDED_COM_SUN_STAR_AWT_SIMPLEFONTMETRIC_HDL
