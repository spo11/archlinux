#ifndef INCLUDED_COM_SUN_STAR_UNO_TYPECLASS_HDL
#define INCLUDED_COM_SUN_STAR_UNO_TYPECLASS_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno {

enum TypeClass
{
    TypeClass_VOID = 0,
    TypeClass_CHAR = 1,
    TypeClass_BOOLEAN = 2,
    TypeClass_BYTE = 3,
    TypeClass_SHORT = 4,
    TypeClass_UNSIGNED_SHORT = 5,
    TypeClass_LONG = 6,
    TypeClass_UNSIGNED_LONG = 7,
    TypeClass_HYPER = 8,
    TypeClass_UNSIGNED_HYPER = 9,
    TypeClass_FLOAT = 10,
    TypeClass_DOUBLE = 11,
    TypeClass_STRING = 12,
    TypeClass_TYPE = 13,
    TypeClass_ANY = 14,
    TypeClass_ENUM = 15,
    TypeClass_TYPEDEF = 16,
    TypeClass_STRUCT = 17,
    TypeClass_UNION = 18,
    TypeClass_EXCEPTION = 19,
    TypeClass_SEQUENCE = 20,
    TypeClass_ARRAY = 21,
    TypeClass_INTERFACE = 22,
    TypeClass_SERVICE = 23,
    TypeClass_MODULE = 24,
    TypeClass_INTERFACE_METHOD = 25,
    TypeClass_INTERFACE_ATTRIBUTE = 26,
    TypeClass_UNKNOWN = 27,
    TypeClass_PROPERTY = 28,
    TypeClass_CONSTANT = 29,
    TypeClass_CONSTANTS = 30,
    TypeClass_SINGLETON = 31,
    TypeClass_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

} } } }

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::TypeClass* ) SAL_THROW( () );

#endif // INCLUDED_COM_SUN_STAR_UNO_TYPECLASS_HDL
